/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package p3.sistema_navegacion_challenger;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.geom.Line2D;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adrivega
 */
public class Main_Navegacion extends javax.swing.JFrame {

    /**
     * Creates new form Main_Navegacion
     */
    public Main_Navegacion() {
        
        initComponents();
        ruta_actual = new Grafo();
        jl_Go.setIcon(new ImageIcon("./Resources/go-button.png"));
        jl_MapaActual.setIcon(new ImageIcon("./Resources/cuadricula_mapa_2.png"));
        jl_ventana.setText("");
        jl_ventana.setIcon(new ImageIcon("./Resources/Hilo/vista_ventana.png"));
        jl_agregarPlaneta_openFoto.setIcon(new ImageIcon("./Resources/open_file.png"));
        jb_editorRutas.setEnabled(false);
        agregar = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JF_visitaMapas = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_planetasExistentes = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jb_agregarFlecha_nuevo = new javax.swing.JButton();
        jb_visitaMapas_cerrar = new javax.swing.JButton();
        jb_agregarPlaneta_nuevo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_flechasExistentes = new javax.swing.JTable();
        jpm_modificarEliminar = new javax.swing.JPopupMenu();
        jmi_modificar = new javax.swing.JMenuItem();
        jmi_eliminar = new javax.swing.JMenuItem();
        jd_modificarPlanetas = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jTF_agregarNodo_nombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jl_agregarPlaneta_openFoto = new javax.swing.JLabel();
        jl_agregarPlaneta_icon = new javax.swing.JLabel();
        jl_modificarPlaneta_titulo = new javax.swing.JLabel();
        jb_planeta_guardarCambios = new javax.swing.JButton();
        jd_modificarFlechas = new javax.swing.JDialog();
        jl_modificarFlechas_titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jcb_agregarFlecha_partida = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcb_agregarFlecha_destino = new javax.swing.JComboBox();
        jsp_agregarFlecha_peso = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jb_flechas_guardarCambios = new javax.swing.JButton();
        JTP_agregar_editar = new javax.swing.JTabbedPane();
        jl_ventana = new javax.swing.JLabel();
        jl_MapaActual = new javax.swing.JLabel();
        jl_Go = new javax.swing.JLabel();
        chb_activarWarp = new javax.swing.JCheckBox();
        jb_editorRutas = new javax.swing.JButton();
        jb_abrirRuta = new javax.swing.JButton();

        JF_visitaMapas.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        JF_visitaMapas.setBackground(new java.awt.Color(255, 255, 255));
        JF_visitaMapas.setForeground(java.awt.Color.black);
        JF_visitaMapas.setMinimumSize(new java.awt.Dimension(0, 600));

        jLabel6.setText("PLANETAS EXISTENTES");

        jt_planetasExistentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Icono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_planetasExistentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_planetasExistentesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jt_planetasExistentes);

        jSeparator3.setForeground(new java.awt.Color(153, 153, 153));

        jb_agregarFlecha_nuevo.setText("Agregar Flecha");
        jb_agregarFlecha_nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarFlecha_nuevoMouseClicked(evt);
            }
        });

        jb_visitaMapas_cerrar.setText("Cerrar");
        jb_visitaMapas_cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_visitaMapas_cerrarMouseClicked(evt);
            }
        });

        jb_agregarPlaneta_nuevo.setText("Agregar Planeta");
        jb_agregarPlaneta_nuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_agregarPlaneta_nuevoMouseClicked(evt);
            }
        });

        jLabel5.setText("FLECHAS EXISTENTES");

        jSeparator2.setForeground(new java.awt.Color(153, 153, 153));

        jt_flechasExistentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Partida", "Destino", "AÃ±os Luz"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_flechasExistentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jt_flechasExistentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jt_flechasExistentes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addComponent(jb_agregarFlecha_nuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jb_visitaMapas_cerrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3))
                    .addComponent(jb_agregarPlaneta_nuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jb_agregarPlaneta_nuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_agregarFlecha_nuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jb_visitaMapas_cerrar)
                .addContainerGap())
        );

        javax.swing.GroupLayout JF_visitaMapasLayout = new javax.swing.GroupLayout(JF_visitaMapas.getContentPane());
        JF_visitaMapas.getContentPane().setLayout(JF_visitaMapasLayout);
        JF_visitaMapasLayout.setHorizontalGroup(
            JF_visitaMapasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_visitaMapasLayout.createSequentialGroup()
                .addContainerGap(600, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        JF_visitaMapasLayout.setVerticalGroup(
            JF_visitaMapasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jmi_modificar.setText("Modificar");
        jmi_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_modificarActionPerformed(evt);
            }
        });
        jpm_modificarEliminar.add(jmi_modificar);

        jmi_eliminar.setText("Eliminar");
        jmi_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarActionPerformed(evt);
            }
        });
        jpm_modificarEliminar.add(jmi_eliminar);

        jd_modificarPlanetas.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel8.setText("Nombre:");

        jLabel9.setText("Icono:");

        jLabel11.setText("Examinar:");

        jl_agregarPlaneta_openFoto.setText("o");
        jl_agregarPlaneta_openFoto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jl_agregarPlaneta_openFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_agregarPlaneta_openFotoMouseClicked(evt);
            }
        });

        jl_agregarPlaneta_icon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jl_modificarPlaneta_titulo.setText("AGREGAR NUEVO PLANETA");

        jb_planeta_guardarCambios.setText("Guardar Cambios");
        jb_planeta_guardarCambios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_planeta_guardarCambiosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_modificarPlanetasLayout = new javax.swing.GroupLayout(jd_modificarPlanetas.getContentPane());
        jd_modificarPlanetas.getContentPane().setLayout(jd_modificarPlanetasLayout);
        jd_modificarPlanetasLayout.setHorizontalGroup(
            jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_modificarPlanetasLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jl_modificarPlaneta_titulo)
                .addGap(102, 102, 102))
            .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                .addGroup(jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTF_agregarNodo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jl_agregarPlaneta_openFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jl_agregarPlaneta_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jb_planeta_guardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jd_modificarPlanetasLayout.setVerticalGroup(
            jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jl_modificarPlaneta_titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addGroup(jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTF_agregarNodo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGroup(jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_modificarPlanetasLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jd_modificarPlanetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jl_agregarPlaneta_openFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_modificarPlanetasLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jl_agregarPlaneta_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addComponent(jb_planeta_guardarCambios)
                .addGap(20, 20, 20))
        );

        jd_modificarFlechas.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jl_modificarFlechas_titulo.setText("AGREGAR NUEVA FLECHA");

        jLabel1.setText("Partida:");

        jLabel2.setText("Destino:");

        jLabel3.setText("Peso:");

        jb_flechas_guardarCambios.setText("Guardar Cambios");
        jb_flechas_guardarCambios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_flechas_guardarCambiosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_modificarFlechasLayout = new javax.swing.GroupLayout(jd_modificarFlechas.getContentPane());
        jd_modificarFlechas.getContentPane().setLayout(jd_modificarFlechasLayout);
        jd_modificarFlechasLayout.setHorizontalGroup(
            jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarFlechasLayout.createSequentialGroup()
                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_modificarFlechasLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_modificarFlechasLayout.createSequentialGroup()
                                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jcb_agregarFlecha_destino, javax.swing.GroupLayout.Alignment.LEADING, 0, 266, Short.MAX_VALUE)
                                        .addComponent(jcb_agregarFlecha_partida, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jsp_agregarFlecha_peso, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jb_flechas_guardarCambios, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jd_modificarFlechasLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(jl_modificarFlechas_titulo)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jd_modificarFlechasLayout.setVerticalGroup(
            jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_modificarFlechasLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jl_modificarFlechas_titulo)
                .addGap(26, 26, 26)
                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_agregarFlecha_partida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcb_agregarFlecha_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_modificarFlechasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jsp_agregarFlecha_peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jb_flechas_guardarCambios)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jl_ventana.setText("Pantalla Principal de Navegacion");
        jl_ventana.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jl_MapaActual.setText("Ruta Actual");
        jl_MapaActual.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jl_Go.setText("GO");
        jl_Go.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_GoMouseClicked(evt);
            }
        });

        chb_activarWarp.setText("Warp Speed");

        jb_editorRutas.setText("Editar Ruta Actual");
        jb_editorRutas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_editorRutasMouseClicked(evt);
            }
        });

        jb_abrirRuta.setText("Abrir Ruta Existente");
        jb_abrirRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_abrirRutaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jl_ventana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(chb_activarWarp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jl_Go, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jb_abrirRuta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jb_editorRutas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jl_MapaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jl_ventana, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jl_Go, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(chb_activarWarp)
                        .addGap(18, 18, 18)
                        .addComponent(jb_editorRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jb_abrirRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jl_MapaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jl_GoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_GoMouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, " entra a simulacion");
    }//GEN-LAST:event_jl_GoMouseClicked

    private void jb_editorRutasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_editorRutasMouseClicked
        reload_datos();
        JF_visitaMapas.pack();
        JF_visitaMapas.setVisible(true);
    }//GEN-LAST:event_jb_editorRutasMouseClicked

    private void jb_abrirRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_abrirRutaMouseClicked
        JFileChooser jfc_abrirRuta = new JFileChooser("./Resources/");
        jfc_abrirRuta.setFileFilter(new FileNameExtensionFilter("Txt", "txt"));
        int seleccion = jfc_abrirRuta.showOpenDialog(new JFrame());
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            String file = jfc_abrirRuta.getSelectedFile().getPath();
            ruta_actual = null;
            try {
                Scanner leer = new Scanner(new File(file));
                while (leer.hasNext()) {
                    String linea = leer.nextLine();
                    String[] datos = linea.split("::");
                    ruta_actual = new Grafo(datos[0]);
                    String[] nodos = datos[1].split("\\|");
                    for (int i = 0; i < nodos.length; i++) {
                        String[] datos_nodos = nodos[i].split(",");
                        ruta_actual.agregarNodo(new Nodo(datos_nodos[0], datos_nodos[1]));
                    }
                    String[] flechas = datos[2].split("\\|");
                    for (int i = 0; i < flechas.length; i++) {
                        String[] datos_flechas = flechas[i].split(",");
                        ruta_actual.agregarFlecha(datos_flechas[0], datos_flechas[1], Integer.parseInt(datos_flechas[2]));
                    }
                }
                leer.close();
                //System.out.println(ruta_actual.toString());
            } catch (NumberFormatException | FileNotFoundException | HeadlessException e) {
                System.out.println(e);
            }
        } else if (seleccion == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "Cancelado");
        }
        if(ruta_actual != null){
            jb_editorRutas.setEnabled(true);
        }
        reload_datos();
    }//GEN-LAST:event_jb_abrirRutaMouseClicked

    private void jl_agregarPlaneta_openFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_agregarPlaneta_openFotoMouseClicked
        JFileChooser jfc_abrirFoto = new JFileChooser("./Resources/Sprites");
        jfc_abrirFoto.setFileFilter(new FileNameExtensionFilter("PNG", "png"));
        int seleccion = jfc_abrirFoto.showOpenDialog(new JFrame());
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            path_imagen = jfc_abrirFoto.getSelectedFile().getPath();
            jl_agregarPlaneta_icon.setIcon(new ImageIcon(path_imagen));
        }
    }//GEN-LAST:event_jl_agregarPlaneta_openFotoMouseClicked

    private void jb_agregarPlaneta_nuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarPlaneta_nuevoMouseClicked
        agregar = true;
        jl_modificarPlaneta_titulo.setText("AGREGAR NUEVO PLANETA:");
        jd_modificarPlanetas.pack();
        jd_modificarPlanetas.setVisible(true);
    }//GEN-LAST:event_jb_agregarPlaneta_nuevoMouseClicked

    private void jb_agregarFlecha_nuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_agregarFlecha_nuevoMouseClicked
        agregar = true;
        jl_modificarFlechas_titulo.setText("AGREGAR NUEVA FLECHA:");
        jd_modificarFlechas.pack();
        jd_modificarFlechas.setVisible(true);
    }//GEN-LAST:event_jb_agregarFlecha_nuevoMouseClicked

    private void jb_visitaMapas_cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_visitaMapas_cerrarMouseClicked
        JF_visitaMapas.setVisible(false);
    }//GEN-LAST:event_jb_visitaMapas_cerrarMouseClicked

    private void jt_flechasExistentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_flechasExistentesMouseClicked
        if(jt_planetasExistentes.getSelectedRow() >= 0){
            jt_planetasExistentes.changeSelection(jt_planetasExistentes.getSelectedRow(),jt_planetasExistentes.getSelectedColumn(),true,false);
        }
        if(evt.isMetaDown() && jt_flechasExistentes.getSelectedRow() >= 0){  
            jpm_modificarEliminar.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jt_flechasExistentesMouseClicked

    private void jt_planetasExistentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jt_planetasExistentesMouseClicked
        if(jt_flechasExistentes.getSelectedRow() >= 0){
            jt_flechasExistentes.changeSelection(jt_flechasExistentes.getSelectedRow(),jt_flechasExistentes.getSelectedColumn(),true,false);
        }
        if(evt.isMetaDown() && jt_planetasExistentes.getSelectedRow() >= 0){  
            jpm_modificarEliminar.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jt_planetasExistentesMouseClicked

    private void jb_planeta_guardarCambiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_planeta_guardarCambiosMouseClicked
        if (agregar) {
            try {
                String[] prueba_path = path_imagen.split("/");
                if (!jTF_agregarNodo_nombre.getText().equals("") && prueba_path[prueba_path.length - 2].equals("Sprites")) {
                    String path = "./Resources/Sprites/" + prueba_path[prueba_path.length - 1];
                    ruta_actual.agregarNodo(new Nodo(jTF_agregarNodo_nombre.getText(), path));
                    jTF_agregarNodo_nombre.setText("");
                    jl_agregarPlaneta_icon.setIcon(null);
                    jd_modificarPlanetas.dispose();
                    
                } else {
                    JOptionPane.showMessageDialog(JF_visitaMapas, "No ha llenado todos los campos necesarios");
                }
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(JF_visitaMapas, "No ha llenado todos los campos necesarios");
            }
        } else { //modificar
            String[] prueba_path = path_imagen.split("/");
            if (!jTF_agregarNodo_nombre.getText().equals("") && prueba_path[prueba_path.length - 2].equals("Sprites")) {
                String path = "./Resources/Sprites/" + prueba_path[prueba_path.length - 1];
                ruta_actual.lista_nodos.get(jt_planetasExistentes.getSelectedRow()).setNombre(jTF_agregarNodo_nombre.getText());
                ruta_actual.lista_nodos.get(jt_planetasExistentes.getSelectedRow()).setFoto(path); 
                jTF_agregarNodo_nombre.setText("");
                jl_agregarPlaneta_icon.setIcon(null);
                jd_modificarPlanetas.dispose();
            } else {
                JOptionPane.showMessageDialog(JF_visitaMapas, "No ha llenado todos los campos necesarios");
            }
            
        }
        reload_datos();
    }//GEN-LAST:event_jb_planeta_guardarCambiosMouseClicked

    private void jb_flechas_guardarCambiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_flechas_guardarCambiosMouseClicked
        if(agregar){
            if (!jcb_agregarFlecha_partida.getSelectedItem().equals("--") && !jcb_agregarFlecha_destino.getSelectedItem().equals("--")) {
                ruta_actual.agregarFlecha(((Nodo) jcb_agregarFlecha_partida.getSelectedItem()).getNombre(), ((Nodo) jcb_agregarFlecha_destino.getSelectedItem()).getNombre(), (int) jsp_agregarFlecha_peso.getValue());
                jsp_agregarFlecha_peso.setValue(0);
                jd_modificarFlechas.dispose();
            } else {
                JOptionPane.showMessageDialog(JF_visitaMapas, "No ha llenado todos los campos necesarios");
            }
        }else{ //modificar
            if (!jcb_agregarFlecha_partida.getSelectedItem().equals("--") && !jcb_agregarFlecha_destino.getSelectedItem().equals("--")) {
                String partida = (String)jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 0);
                String destino = (String)jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 1);
                for (int i = 0; i < ruta_actual.lista_nodos.size(); i++) {
                    for (int j = 0; j < ruta_actual.lista_nodos.get(i).flechas_salientes.size(); j++) {
                        if (ruta_actual.lista_nodos.get(i).getNombre().equals(partida) && ruta_actual.lista_nodos.get(i).flechas_salientes.get(j).getDestino().getNombre().equals(destino)) {
                            ruta_actual.lista_nodos.get(i).deleteFlecha(j);
                        }
                    }
                }
                ruta_actual.agregarFlecha(((Nodo) jcb_agregarFlecha_partida.getSelectedItem()).getNombre(), ((Nodo) jcb_agregarFlecha_destino.getSelectedItem()).getNombre(), (int) jsp_agregarFlecha_peso.getValue());
                jsp_agregarFlecha_peso.setValue(0);
                jd_modificarFlechas.dispose();
                
            } else {
                JOptionPane.showMessageDialog(JF_visitaMapas, "No ha llenado todos los campos necesarios");
            }
        }
        reload_datos();
        
    }//GEN-LAST:event_jb_flechas_guardarCambiosMouseClicked

    private void jmi_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_modificarActionPerformed
        agregar = false;
        if(jt_flechasExistentes.getSelectedRow() >= 0){
            jl_modificarFlechas_titulo.setText("MODIFICAR FLECHA");
            String partida = (String) jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 0);
            String destino = (String) jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 1);
            Flecha cambio= null;
            Nodo part = null;
            for (int i = 0; i < ruta_actual.lista_nodos.size(); i++) {
                for (int j = 0; j < ruta_actual.lista_nodos.get(i).flechas_salientes.size(); j++) {
                    if (ruta_actual.lista_nodos.get(i).getNombre().equals(partida) && ruta_actual.lista_nodos.get(i).flechas_salientes.get(j).getDestino().getNombre().equals(destino)) {
                        part = ruta_actual.lista_nodos.get(i);
                        cambio = ruta_actual.lista_nodos.get(i).flechas_salientes.get(j);
                    }
                }
            }
            jcb_agregarFlecha_partida.setSelectedItem(part);
            jcb_agregarFlecha_destino.setSelectedItem(cambio.getDestino());
            jsp_agregarFlecha_peso.setValue(cambio.getPeso());
            
            jd_modificarFlechas.pack();
            jd_modificarFlechas.setVisible(true);
        }else{
            jl_modificarPlaneta_titulo.setText("MODIFICAR PLANETA");
            jTF_agregarNodo_nombre.setText(ruta_actual.lista_nodos.get(jt_planetasExistentes.getSelectedRow()).getNombre());
            jl_agregarPlaneta_icon.setIcon(ruta_actual.lista_nodos.get(jt_planetasExistentes.getSelectedRow()).getFoto());
            path_imagen = ruta_actual.lista_nodos.get(jt_planetasExistentes.getSelectedRow()).getFotoPath();
            jd_modificarPlanetas.pack();
            jd_modificarPlanetas.setVisible(true);
        } 
    }//GEN-LAST:event_jmi_modificarActionPerformed

    private void jmi_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarActionPerformed
        int seleccion = JOptionPane.showConfirmDialog(JF_visitaMapas, "Esta seguro que desea eliminar este elemento?");
        if (jt_flechasExistentes.getSelectedRow() >= 0) {
            if (seleccion == JOptionPane.YES_OPTION) {
                String partida = (String) jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 0);
                String destino = (String) jt_flechasExistentes.getModel().getValueAt(jt_flechasExistentes.getSelectedRow(), 1);
                for (int i = 0; i < ruta_actual.lista_nodos.size(); i++) {
                    for (int j = 0; j < ruta_actual.lista_nodos.get(i).flechas_salientes.size(); j++) {
                        if (ruta_actual.lista_nodos.get(i).getNombre().equals(partida) && ruta_actual.lista_nodos.get(i).flechas_salientes.get(j).getDestino().getNombre().equals(destino)) {
                            ruta_actual.lista_nodos.get(i).deleteFlecha(j);
                        }
                    }
                }
            }
        } else {
            if(seleccion == JOptionPane.YES_OPTION){
                ruta_actual.deleteNodo(jt_planetasExistentes.getSelectedRow());
            }
        }
        reload_datos();
        JOptionPane.showMessageDialog(JF_visitaMapas, "Elemento eliminado exitosamente");
    }//GEN-LAST:event_jmi_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Navegacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Navegacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Navegacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Navegacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Navegacion().setVisible(true);
            }
        });
    }
    
    public void reload_datos(){
        //System.out.println("entra a reload_datos");
        //Background grafica = null;
        Background grafica = new Background("./Resources/cuadricula_mapa.png",ruta_actual.lista_nodos);
        //grafica.setVisible(true);
        ruta_actual.lista_nodos = grafica.getLista();
        JF_visitaMapas.getContentPane().add(grafica);
        grafica.repaint();
        //JF_visitaMapas.getContentPane().add(new Background("./Resources/cuadricula_mapa.png",ruta_actual.lista_nodos));
        
        //tabla planetas
        DefaultTableModel modelo_planetas = (DefaultTableModel)jt_planetasExistentes.getModel();
        while(modelo_planetas.getRowCount() >0){
            modelo_planetas.removeRow(0);
        }
        for(Nodo temp:ruta_actual.lista_nodos){
            Object[] row = {temp.getNombre(), temp.getFoto()};
            modelo_planetas.addRow(row);
        }
        jt_planetasExistentes.setModel(modelo_planetas);
        
        //tabla flechas
        DefaultTableModel modelo_flechas = (DefaultTableModel)jt_flechasExistentes.getModel();
        while(modelo_flechas.getRowCount() >0){
            modelo_flechas.removeRow(0);
        }
        for (int i = 0; i < ruta_actual.lista_nodos.size(); i++) {
            for (Flecha temp :ruta_actual.lista_nodos.get(i).flechas_salientes) {
                Object[] row = {ruta_actual.lista_nodos.get(i).getNombre(), temp.getDestino().getNombre(),temp.getPeso()};
                modelo_flechas.addRow(row);
            }
        }
        jt_flechasExistentes.setModel(modelo_flechas);
        
        //combo box planetas de partida
        DefaultComboBoxModel cb_planetas_partida = new DefaultComboBoxModel();
        cb_planetas_partida.addElement("--");
        for(Nodo tep:ruta_actual.lista_nodos){
            cb_planetas_partida.addElement(tep);
        }
        jcb_agregarFlecha_partida.setModel(cb_planetas_partida);
        
        //combo box planetas destino
        DefaultComboBoxModel cb_planetas_destino = new DefaultComboBoxModel();
        cb_planetas_destino.addElement("--");
        for(Nodo tep:ruta_actual.lista_nodos){
            cb_planetas_destino.addElement(tep);
        }
        jcb_agregarFlecha_destino.setModel(cb_planetas_destino);
        
        //JF_visitaMapas.repaint();
        JF_visitaMapas.pack();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame JF_visitaMapas;
    private javax.swing.JTabbedPane JTP_agregar_editar;
    private javax.swing.JCheckBox chb_activarWarp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTF_agregarNodo_nombre;
    private javax.swing.JButton jb_abrirRuta;
    private javax.swing.JButton jb_agregarFlecha_nuevo;
    private javax.swing.JButton jb_agregarPlaneta_nuevo;
    private javax.swing.JButton jb_editorRutas;
    private javax.swing.JButton jb_flechas_guardarCambios;
    private javax.swing.JButton jb_planeta_guardarCambios;
    private javax.swing.JButton jb_visitaMapas_cerrar;
    private javax.swing.JComboBox jcb_agregarFlecha_destino;
    private javax.swing.JComboBox jcb_agregarFlecha_partida;
    private javax.swing.JDialog jd_modificarFlechas;
    private javax.swing.JDialog jd_modificarPlanetas;
    private javax.swing.JLabel jl_Go;
    private javax.swing.JLabel jl_MapaActual;
    private javax.swing.JLabel jl_agregarPlaneta_icon;
    private javax.swing.JLabel jl_agregarPlaneta_openFoto;
    private javax.swing.JLabel jl_modificarFlechas_titulo;
    private javax.swing.JLabel jl_modificarPlaneta_titulo;
    private javax.swing.JLabel jl_ventana;
    private javax.swing.JMenuItem jmi_eliminar;
    private javax.swing.JMenuItem jmi_modificar;
    private javax.swing.JPopupMenu jpm_modificarEliminar;
    private javax.swing.JSpinner jsp_agregarFlecha_peso;
    private javax.swing.JTable jt_flechasExistentes;
    private javax.swing.JTable jt_planetasExistentes;
    // End of variables declaration//GEN-END:variables
    Grafo ruta_actual;
    String path_imagen;
    boolean agregar;
    Nodo nodo_seleccionado;
    Flecha flecha_seleccionada;
}

class Background extends JPanel {
    private String path;
    ArrayList<Nodo> lista_nodos;

    public Background(String path,ArrayList<Nodo> lista_nodos) {
        this.path = path;
        this.setLocation(0, 0);
        this.setSize(600,600);
        this.lista_nodos = new ArrayList();
        this.lista_nodos = lista_nodos;
    }

    @Override
    protected void paintComponent(Graphics g) {
        //System.out.println("background:");
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g.drawImage(Toolkit.getDefaultToolkit().getImage(path),0,0,this);
        for (int i = 0; i < lista_nodos.size(); i++) {
            lista_nodos.get(i).setPosicion(coordenadas_graficar(i));
        }
        g.setColor(Color.white);
        for (int i = 0; i < lista_nodos.size(); i++) {
            Point cola = lista_nodos.get(i).getPosicion();
            for (int j = 0; j < lista_nodos.get(i).flechas_salientes.size(); j++) {
                Point cabeza = lista_nodos.get(i).flechas_salientes.get(j).getDestino().getPosicion();
                g.drawLine(cola.x+15, cola.y+15, cabeza.x+15, cabeza.y+15);
                drawArrowHead(g2, cabeza, cola, Color.white);
            }
        }
        for (int i = 0; i < lista_nodos.size(); i++) {
            //JLabel icono_nodo = new JLabel(new ImageIcon(lista_nodos.get(i).getFotoPath()));
            //icono_nodo.setSize(200, 200);
            //System.out.println(lista_nodos.get(i).getFotoPath());
            g.drawImage(Toolkit.getDefaultToolkit().getImage(lista_nodos.get(i).getFotoPath()), lista_nodos.get(i).getPosicion().x, lista_nodos.get(i).getPosicion().y, this);
        }
        //System.out.println();
    }
    
    public Point coordenadas_graficar(int pos){
        int x = (int)(225*Math.cos(Math.toRadians(360/lista_nodos.size()*(pos+1))));
        int y = (int)(225*Math.sin(Math.toRadians(360/lista_nodos.size()*(pos+1))));
        return new Point(x+285,y+285);
    }
    
    public ArrayList<Nodo> getLista(){
        return lista_nodos;
    }
    
    private void drawArrowHead(Graphics2D g2, Point tip, Point tail, Color color){
        double phi = Math.toRadians(35);
        int barb = 15;
        g2.setPaint(color);
        double dy = tip.y - tail.y;
        double dx = tip.x - tail.x;
        double theta = Math.atan2(dy, dx);
        //System.out.println("theta = " + Math.toDegrees(theta));
        double x1, y1, x2, y2;
        x1 = tip.x+15 - 20 * Math.cos(theta);
        y1 = tip.y+15 - 20 * Math.sin(theta);
        x2 = x1 - barb * Math.cos(theta+phi);
        y2 = y1 - barb * Math.sin(theta+phi);
        g2.draw(new Line2D.Double(x1, y1, x2, y2));
        x2 = x1 - barb * Math.cos(theta-phi);
        y2 = y1 - barb * Math.sin(theta-phi);
        g2.draw(new Line2D.Double(x1, y1, x2, y2));
    }
    
}
